// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: proto/attach.proto

package attach_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveAttachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	MailID   int32  `protobuf:"varint,2,opt,name=mailID,proto3" json:"mailID,omitempty"`
	File     []byte `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *SaveAttachRequest) Reset() {
	*x = SaveAttachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_attach_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAttachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAttachRequest) ProtoMessage() {}

func (x *SaveAttachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attach_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAttachRequest.ProtoReflect.Descriptor instead.
func (*SaveAttachRequest) Descriptor() ([]byte, []int) {
	return file_proto_attach_proto_rawDescGZIP(), []int{0}
}

func (x *SaveAttachRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SaveAttachRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

func (x *SaveAttachRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_attach_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attach_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_proto_attach_proto_rawDescGZIP(), []int{1}
}

func (x *Nothing) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetAttachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	MailID   int32  `protobuf:"varint,2,opt,name=mailID,proto3" json:"mailID,omitempty"`
	Filename string `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *GetAttachRequest) Reset() {
	*x = GetAttachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_attach_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttachRequest) ProtoMessage() {}

func (x *GetAttachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attach_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttachRequest.ProtoReflect.Descriptor instead.
func (*GetAttachRequest) Descriptor() ([]byte, []int) {
	return file_proto_attach_proto_rawDescGZIP(), []int{2}
}

func (x *GetAttachRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetAttachRequest) GetMailID() int32 {
	if x != nil {
		return x.MailID
	}
	return 0
}

func (x *GetAttachRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type AttachResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *AttachResponse) Reset() {
	*x = AttachResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_attach_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachResponse) ProtoMessage() {}

func (x *AttachResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attach_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachResponse.ProtoReflect.Descriptor instead.
func (*AttachResponse) Descriptor() ([]byte, []int) {
	return file_proto_attach_proto_rawDescGZIP(), []int{3}
}

func (x *AttachResponse) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type AttachListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenames []byte `protobuf:"bytes,1,opt,name=filenames,proto3" json:"filenames,omitempty"`
}

func (x *AttachListResponse) Reset() {
	*x = AttachListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_attach_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachListResponse) ProtoMessage() {}

func (x *AttachListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_attach_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachListResponse.ProtoReflect.Descriptor instead.
func (*AttachListResponse) Descriptor() ([]byte, []int) {
	return file_proto_attach_proto_rawDescGZIP(), []int{4}
}

func (x *AttachListResponse) GetFilenames() []byte {
	if x != nil {
		return x.Filenames
	}
	return nil
}

var File_proto_attach_proto protoreflect.FileDescriptor

var file_proto_attach_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x11, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x21, 0x0a, 0x07, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x12,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x32, 0xef, 0x01, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x4b, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0a, 0x53, 0x61, 0x76, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x1e,
	0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_attach_proto_rawDescOnce sync.Once
	file_proto_attach_proto_rawDescData = file_proto_attach_proto_rawDesc
)

func file_proto_attach_proto_rawDescGZIP() []byte {
	file_proto_attach_proto_rawDescOnce.Do(func() {
		file_proto_attach_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_attach_proto_rawDescData)
	})
	return file_proto_attach_proto_rawDescData
}

var file_proto_attach_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_attach_proto_goTypes = []interface{}{
	(*SaveAttachRequest)(nil),  // 0: attach_proto.SaveAttachRequest
	(*Nothing)(nil),            // 1: attach_proto.Nothing
	(*GetAttachRequest)(nil),   // 2: attach_proto.GetAttachRequest
	(*AttachResponse)(nil),     // 3: attach_proto.AttachResponse
	(*AttachListResponse)(nil), // 4: attach_proto.AttachListResponse
}
var file_proto_attach_proto_depIdxs = []int32{
	2, // 0: attach_proto.Attach.GetAttach:input_type -> attach_proto.GetAttachRequest
	0, // 1: attach_proto.Attach.SaveAttach:input_type -> attach_proto.SaveAttachRequest
	2, // 2: attach_proto.Attach.ListAttach:input_type -> attach_proto.GetAttachRequest
	3, // 3: attach_proto.Attach.GetAttach:output_type -> attach_proto.AttachResponse
	1, // 4: attach_proto.Attach.SaveAttach:output_type -> attach_proto.Nothing
	4, // 5: attach_proto.Attach.ListAttach:output_type -> attach_proto.AttachListResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_attach_proto_init() }
func file_proto_attach_proto_init() {
	if File_proto_attach_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_attach_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAttachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_attach_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_attach_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_attach_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_attach_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_attach_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_attach_proto_goTypes,
		DependencyIndexes: file_proto_attach_proto_depIdxs,
		MessageInfos:      file_proto_attach_proto_msgTypes,
	}.Build()
	File_proto_attach_proto = out.File
	file_proto_attach_proto_rawDesc = nil
	file_proto_attach_proto_goTypes = nil
	file_proto_attach_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AttachClient is the client API for Attach service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttachClient interface {
	GetAttach(ctx context.Context, in *GetAttachRequest, opts ...grpc.CallOption) (*AttachResponse, error)
	SaveAttach(ctx context.Context, in *SaveAttachRequest, opts ...grpc.CallOption) (*Nothing, error)
	ListAttach(ctx context.Context, in *GetAttachRequest, opts ...grpc.CallOption) (*AttachListResponse, error)
}

type attachClient struct {
	cc grpc.ClientConnInterface
}

func NewAttachClient(cc grpc.ClientConnInterface) AttachClient {
	return &attachClient{cc}
}

func (c *attachClient) GetAttach(ctx context.Context, in *GetAttachRequest, opts ...grpc.CallOption) (*AttachResponse, error) {
	out := new(AttachResponse)
	err := c.cc.Invoke(ctx, "/attach_proto.Attach/GetAttach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachClient) SaveAttach(ctx context.Context, in *SaveAttachRequest, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/attach_proto.Attach/SaveAttach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attachClient) ListAttach(ctx context.Context, in *GetAttachRequest, opts ...grpc.CallOption) (*AttachListResponse, error) {
	out := new(AttachListResponse)
	err := c.cc.Invoke(ctx, "/attach_proto.Attach/ListAttach", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttachServer is the server API for Attach service.
type AttachServer interface {
	GetAttach(context.Context, *GetAttachRequest) (*AttachResponse, error)
	SaveAttach(context.Context, *SaveAttachRequest) (*Nothing, error)
	ListAttach(context.Context, *GetAttachRequest) (*AttachListResponse, error)
}

// UnimplementedAttachServer can be embedded to have forward compatible implementations.
type UnimplementedAttachServer struct {
}

func (*UnimplementedAttachServer) GetAttach(context.Context, *GetAttachRequest) (*AttachResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttach not implemented")
}
func (*UnimplementedAttachServer) SaveAttach(context.Context, *SaveAttachRequest) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveAttach not implemented")
}
func (*UnimplementedAttachServer) ListAttach(context.Context, *GetAttachRequest) (*AttachListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAttach not implemented")
}

func RegisterAttachServer(s *grpc.Server, srv AttachServer) {
	s.RegisterService(&_Attach_serviceDesc, srv)
}

func _Attach_GetAttach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttachServer).GetAttach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/attach_proto.Attach/GetAttach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttachServer).GetAttach(ctx, req.(*GetAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attach_SaveAttach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttachServer).SaveAttach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/attach_proto.Attach/SaveAttach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttachServer).SaveAttach(ctx, req.(*SaveAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Attach_ListAttach_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttachRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttachServer).ListAttach(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/attach_proto.Attach/ListAttach",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttachServer).ListAttach(ctx, req.(*GetAttachRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Attach_serviceDesc = grpc.ServiceDesc{
	ServiceName: "attach_proto.Attach",
	HandlerType: (*AttachServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAttach",
			Handler:    _Attach_GetAttach_Handler,
		},
		{
			MethodName: "SaveAttach",
			Handler:    _Attach_SaveAttach_Handler,
		},
		{
			MethodName: "ListAttach",
			Handler:    _Attach_ListAttach_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/attach.proto",
}
